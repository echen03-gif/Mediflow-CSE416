name: Render Deployment On Merge

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  
    
    - name: Install Dependencies
      run: npm install

    - name: Build
      run: npm ci && npm run build  

    - name: Deploy to Render
      run: |
        RESPONSE=$(curl -X POST -s -w "%{http_code}" -o output.txt ${{ secrets.RENDER_DEPLOYAPI }})
        if [ "$RESPONSE" -ne 201 ]; then  
          echo "Deployment failed with status $RESPONSE"
          cat output.txt
          exit 1
        fi
      env:
        RENDER_DEPLOYAPI: ${{ secrets.RENDER_DEPLOYAPI }}

    - name: Check Deployment Status
      run: |
        DEPLOY_ID=$(cat output.txt | jq -r '.id')
        STATUS="unknown"
        COUNTER=0
        MAX_ATTEMPTS=30  # Limits the check to 5 minutes (10 seconds * 30)
        until [[ "$STATUS" == "success" || "$COUNTER" -ge "$MAX_ATTEMPTS" ]]; do
          sleep 10
          RESULT=$(curl -s "https://api.render.com/deployments/$DEPLOY_ID/status" -H "Authorization: Bearer ${{ secrets.RENDER_API_TOKEN }}")
          STATUS=$(echo $RESULT | jq -r '.status')
          if [ "$STATUS" == "failed" ]; then
            echo "Deployment failed"
            exit 1
          fi
          let COUNTER=COUNTER+1
        done
        if [ "$STATUS" != "success" ]; then
          echo "Deployment did not succeed within the expected time."
          exit 1
        fi
      env:
        RENDER_API_TOKEN: ${{ secrets.RENDER_APIKEY }}
